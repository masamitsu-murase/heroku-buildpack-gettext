#!/usr/bin/env sh
# % bin/compile <build-dir> <cache-dir> <env-dir>

set -e

CACHE_VERSION=cache_ver_1

BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2

GETTEXT_DIR=${BUILD_DIR}/.heroku/gettext
GETTEXT_PREFIX=${GETTEXT_DIR}/usr/local

indent() {
  sed -u 's/^/       /'
}

cd $BUILD_DIR

if [ -f ${CACHE_DIR}/.heroku/gettext/${CACHE_VERSION} ]; then
  echo "GNU gettext is already compiled" | indent

  echo "-----> Copying compiled gettext from cache"
  mkdir -p ${BUILD_DIR}/.heroku/gettext
  cp -R ${CACHE_DIR}/.heroku/gettext/* ${BUILD_DIR}/.heroku/gettext/

  echo "-----> Installing export script"
  echo "export PATH=\"${BUILD_DIR}/.heroku/gettext/usr/local/bin:\$PATH\"" > ${ROOT_DIR}/export
  echo "export LD_LIBRARY_PATH=\"${BUILD_DIR}/.heroku/gettext/usr/local/lib:\$LD_LIBRARY_PATH\"" >> ${ROOT_DIR}/export

  echo "-----> Installing profile script"
  mkdir -p "${BUILD_DIR}/.profile.d"
  cp ${ROOT_DIR}/profile/* ${BUILD_DIR}/.profile.d/

  exit 0
fi

mkdir -p $GETTEXT_DIR

echo "-----> Extracting gettext"
tar zxf ${ROOT_DIR}/gettext.tar.gz
mv gettext-0.19.8.1 gettext

cd gettext

echo "-----> Compiling gettext"
if [ -f configure ]; then
  echo "-----> Configuring"
  ./configure --prefix=${GETTEXT_PREFIX} 2>&1 | indent
fi
make
make install

${GETTEXT_PREFIX}/bin/gettext --version | indent

cd $BUILD_DIR

# https://devcenter.heroku.com/articles/buildpack-api#caching
# > Heroku users can use the heroku-repo plugin to clear the build cache
# > created by the buildpack they use for their app
echo "-----> Creating cache"
rm -fr ${CACHE_DIR}/.heroku/gettext
mkdir -p ${CACHE_DIR}/.heroku/

cp -R ${GETTEXT_DIR} ${CACHE_DIR}/.heroku/
touch ${CACHE_DIR}/.heroku/gettext/${CACHE_VERSION}

mv ${GETTEXT_ARCHIVE} ${CACHE_DIR}/ &> /dev/null || true

echo "-----> Cleaning up source"
rm -fr gettext

echo "-----> Installing export script"
echo "export PATH=\"${BUILD_DIR}/.heroku/gettext/usr/local/bin:\$PATH\"" > ${ROOT_DIR}/export
echo "export LD_LIBRARY_PATH=\"${BUILD_DIR}/.heroku/gettext/usr/local/lib:\$LD_LIBRARY_PATH\"" >> ${ROOT_DIR}/export

echo "-----> Installing profile script"
mkdir -p "${BUILD_DIR}/.profile.d"
cp ${ROOT_DIR}/profile/* ${BUILD_DIR}/.profile.d/

exit 0
